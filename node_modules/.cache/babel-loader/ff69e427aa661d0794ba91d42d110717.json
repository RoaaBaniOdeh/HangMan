{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIT\\\\Desktop\\\\hangman\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Score from \"./components/score\";\nimport Solution from \"./components/solution\";\nimport Letters from \"./components/letters\";\nimport { Component } from \"react\";\nimport EndGame from \"./components/EndGame\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  generateLetterStatuses() {\n    let letterStatus = {};\n\n    for (let i = 65; i < 91; i++) {\n      letterStatus[String.fromCharCode(i)] = false;\n    }\n\n    return letterStatus;\n  }\n\n  constructor() {\n    super();\n\n    this.selectLetter = letter => {\n      let letters = this.state.letterStatus;\n      letters[letter] = true;\n      let Winner = this.state.solution.word.split(\"\").filter(w => letters[w]);\n      let isWinner = false;\n      if (Winner.length == this.state.solution.word.length) isWinner = \"win\";\n\n      if (this.state.solution.word.indexOf(letter) == -1) {\n        if (this.state.score - 20 <= 0) isWinner = \"lose\";\n        this.setState({\n          letterStatus: letters,\n          score: this.state.score - 10,\n          isWinner: isWinner\n        });\n      } else this.setState({\n        letterStatus: letters,\n        score: this.state.score + 5,\n        isWinner: isWinner\n      });\n    };\n\n    this.state = {\n      letterStatus: this.generateLetterStatuses(),\n      solution: {\n        word: \"BURGER\",\n        hint: \"Best dish ever\"\n      },\n      score: 100,\n      isWinner: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [this.state.isWinner == \"win\" ? /*#__PURE__*/_jsxDEV(EndGame, {\n          isWinner: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this) : this.state.isWinner == \"lose\" ? /*#__PURE__*/_jsxDEV(EndGame, {\n          isWinner: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Score, {\n          score: this.state.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Solution, {\n          letterStatus: this.state.letterStatus,\n          solution: this.state.solution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Letters, {\n          letterStatus: this.state.letterStatus,\n          selectLetter: this.selectLetter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["logo","Score","Solution","Letters","Component","EndGame","App","generateLetterStatuses","letterStatus","i","String","fromCharCode","constructor","selectLetter","letter","letters","state","Winner","solution","word","split","filter","w","isWinner","length","indexOf","score","setState","hint","render"],"sources":["C:/Users/BIT/Desktop/hangman/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Score from \"./components/score\";\nimport Solution from \"./components/solution\";\nimport Letters from \"./components/letters\";\nimport { Component } from \"react\";\nimport EndGame from \"./components/EndGame\";\n\nclass App extends Component {\n  generateLetterStatuses() {\n    let letterStatus = {};\n\n    for (let i = 65; i < 91; i++) {\n      letterStatus[String.fromCharCode(i)] = false;\n    }\n    return letterStatus;\n  }\n  selectLetter = (letter) => {\n    let letters = this.state.letterStatus;\n    letters[letter] = true;\n    let Winner = this.state.solution.word.split(\"\").filter((w) => letters[w]);\n    let isWinner = false;\n    if (Winner.length == this.state.solution.word.length) isWinner = \"win\";\n    if (this.state.solution.word.indexOf(letter) == -1) {\n      if (this.state.score - 20 <= 0) isWinner = \"lose\";\n      this.setState({\n        letterStatus: letters,\n        score: this.state.score - 10,\n        isWinner:isWinner\n      });\n    } else\n      this.setState({\n        letterStatus: letters,\n        score: this.state.score + 5,\n        isWinner: isWinner,\n      });\n  };\n  constructor() {\n    super();\n    this.state = {\n      letterStatus: this.generateLetterStatuses(),\n      solution: {\n        word: \"BURGER\",\n        hint: \"Best dish ever\",\n      },\n      score: 100,\n      isWinner: false,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {this.state.isWinner == \"win\" ? (\n            <EndGame isWinner={true} />\n          ) : this.state.isWinner == \"lose\" ? (\n            <EndGame isWinner={false} />\n          ) : (\n            <Score score={this.state.score} />\n          )}\n          <Solution\n            letterStatus={this.state.letterStatus}\n            solution={this.state.solution}\n          />\n          <Letters\n            letterStatus={this.state.letterStatus}\n            selectLetter={this.selectLetter}\n          />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}